name: Actions CI

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Enable KVM group perms
        run: |
            echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
            sudo udevadm control --reload-rules
            sudo udevadm trigger --name-match=kvm

      - name: Install VMs
        run: |
          set -x
          sudo snap install multipass --edge # Edge is necessary to get 1.15 dev because of networks support
          sudo chmod a+w /var/snap/multipass/common/multipass_socket # Fix 'multipass socket access denied'
          multipass find

          # Set up some bridges for the VMs
          sudo ip link add lannetvm type bridge
          sudo ip link add wannetvm type bridge
          sudo ip link set up lannetvm
          sudo ip link set up wannetvm

          # Start VMs
          # Multipass and the OpenWrt container are using the same MAC QUI 52:54:00 which creates error. Let's use differnet MAC addresses here
          multipass launch docker --network name=wannetvm,mac=06:00:00:11:22:33 --network name=lannetvm,mac=06:00:00:44:55:66 --name router-vm
          multipass mount $GITHUB_WORKSPACE router-vm

          multipass launch --network wannetvm --name wan-vm
          multipass launch --network lannetvm --name lan-vm

      - name: Show VM and and enviroments variables
        run:  |
          export
          multipass exec router-vm -- lsb_release -a
          multipass info

      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare VMs
        run: |
          # By default portainer is running at port 9000. But we need port 9000
          multipass exec router-vm -- docker stop portainer

          # Install python
          multipass exec router-vm -- sudo apt-get -y install python3-pip python-is-python3

          # Install everthing for pytest
          multipass exec router-vm -- find .
          #multipass exec router-vm -- export PATH=$PATH:~/.local/bin # not working
          multipass exec router-vm -- pip install -r test/requirements.txt
          
          echo '******** router-vm IPs ********'
          multipass exec router-vm -- ip addr

          # Prepare WAN VM
          echo '******** wan-vm IPs ********'
          multipass exec wan-vm -- sudo ip addr add 192.168.22.1/24 dev ens4
          multipass exec wan-vm -- ip addr
          multipass exec wan-vm -- sudo sh -c 'apt update && apt install -y isc-dhcp-server && echo -e "default-lease-time 600\nmax-lease-time 7200\nsubnet 192.168.22.0 netmask 255.255.255.0 {\n  range 192.168.22.100 192.168.22.200;\n  option routers 192.168.22.1;\n  option domain-name-servers 8.8.8.8, 8.8.4.4;\n  option domain-name \"example.org\";\n}" > /etc/dhcp/dhcpd.conf && systemctl enable isc-dhcp-server && systemctl restart isc-dhcp-server'
          multipass exec wan-vm -- cat /etc/dhcp/dhcpd.conf

          # Prepare WAN VM
          echo '******** lan-vm IPs ********'
          multipass exec lan-vm -- ip addr

      - name: Run tests
        #timeout-minutes: 10
        run: |
          # Run pytest
          multipass exec router-vm -- sh -c 'cd test/ && ~/.local/bin/pytest -v -s'

          