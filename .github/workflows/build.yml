name: Actions CI

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
      #- name: Enable KVM group perms
      #  run: |
      #      echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
      #      sudo udevadm control --reload-rules
      #      sudo udevadm trigger --name-match=kvm

      - name: Install VMs
        run: |
          set -x
          sudo snap install multipass --edge # Edge is necessary to get 1.15 dev because of networks support
          sudo chmod a+w /var/snap/multipass/common/multipass_socket # Fix 'multipass socket access denied'
          multipass find

          # Set up some bridges for the VMs
          sudo ip link add lannetvm type bridge
          sudo ip link add wannetvm type bridge
          sudo ip link set dev lannetvm up
          sudo ip link set dev wannetvm up
          ip addr

          # We need to disable the firewall otherwise the tap devices are not working properly
          sudo ufw disable

          # Start VMs
          # Multipass and the OpenWrt container are using the same MAC QUI 52:54:00 which creates error. Let's use differnet MAC addresses here
          multipass launch docker --network name=wannetvm,mac=06:00:00:11:22:33 --network name=lannetvm,mac=06:00:00:44:55:66 --name router-vm
          multipass mount $GITHUB_WORKSPACE router-vm

          #multipass launch --network wannetvm --name wan-vm
          #multipass launch --network lannetvm --name lan-vm

      - name: Show VM and and enviroments variables
        run:  |
          export
          multipass exec router-vm -- lsb_release -a
          multipass info

      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare VMs
        run: |
          # By default portainer is running at port 9000. But we need port 9000
          multipass exec router-vm -- docker stop portainer

          # Install python
          multipass exec router-vm -- sudo apt-get -y install python3-pip python-is-python3

          # Install everthing for pytest
          multipass exec router-vm -- find .
          #multipass exec router-vm -- export PATH=$PATH:~/.local/bin # not working
          multipass exec router-vm -- pip install -r test/requirements.txt
          
          echo '******** router-vm IPs ********'
          multipass exec router-vm -- ip addr

          echo '******** router-vm USB support ********'
          multipass exec router-vm -- sudo apt-get -y install linux-generic build-essential
          multipass exec router-vm -- git clone https://github.com/AlbrechtL/USBIP-Virtual-USB-Device.git
          multipass exec router-vm -- cd USBIP-Virtual-USB-Device/c/ && make
          screen -L -d -m multipass exec router-vm  -- sudo USBIP-Virtual-USB-Device/c/cdc-ether -e 88:00:66:99:5b:aa -i ens3 -p 3242 -b 1-1
          sleep 1
          cat screenlog.0
          multipass exec router-vm -- sudo usbip --tcp-port 3242 attach -r 127.0.0.1 -b 1-1
          sleep 5
          multipass exec router-vm -- lsusb
          multipass exec router-vm -- ip addr


      - name: Run tests
        #timeout-minutes: 10
        run: |
          # Run pytest
          multipass exec router-vm -- sh -c 'cd test/ && ~/.local/bin/pytest -v -s'

          
